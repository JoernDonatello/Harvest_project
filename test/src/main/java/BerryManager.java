import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jörn
 */
public class BerryManager extends javax.swing.JFrame {

    private int berryID, weight;
    private String berrytyp, color;

    static BerryManager mmyBerryManager = new BerryManager();
    static ArrayList<BerryManager> myBerry= new ArrayList<>();
    
    public BerryManager() {
        initComponents();
        hinzufuegen();
    }

    public BerryManager(int id, String berrytyp, int weight, String color) {
        this.berryID = id;
        this.berrytyp = berrytyp;
        this.weight =  weight;
        this.color = color;
    }

    public int getBerryID() {
        return berryID;
    }

    public void setBerryID(int berryID) {
        this.berryID = berryID;
    }

    public int getWeight() {
        return weight;
    }

    public void setWeight(int weight) {
        this.weight = weight;
    }

    public String getBerrytyp() {
        return berrytyp;
    }

    public void setBerrytyp(String berrytyp) {
        this.berrytyp = berrytyp;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListBerry = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jWarningBerry = new javax.swing.JLabel();
        cbFilter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("create a new berry");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1createHelper(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ListBerry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatenDoubleClick(evt);
            }
        });
        jScrollPane1.setViewportView(ListBerry);

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4deleteHelper(evt);
            }
        });

        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jWarningBerry.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jWarningBerry.setForeground(new java.awt.Color(255, 51, 51));

        cbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all", "red", "yellow", "brown", "green" }));
        cbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltershowFilter(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jWarningBerry, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbFilter, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(26, 26, 26)
                        .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jWarningBerry, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1createHelper(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1createHelper
        this.setVisible(false);
        CreateBerry createwindow = new CreateBerry();
        createwindow.setVisible(true);
    }//GEN-LAST:event_jButton1createHelper

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jWarningBerry.setText("");
        if (ListBerry.getModel().getSize()==0) {
            jWarningBerry.setText("Bruder legt doch erstmal ein Helper an?!");
        }else
        {
            try {
                int selectedIndex = ListBerry.getSelectedIndex();
                if (selectedIndex != -1) {
                    this.setVisible(false);
                    UpdateBerry createwindow = new UpdateBerry();
                    createwindow.setVisible(true);
                    UpdateBerry.setBerry(selectedIndex);
                }else{
                    jWarningBerry.setText("Erst auswählen dann updaten!");
                }
            } catch (Exception e) {
                jWarningBerry.setText("Bruder legt doch erstmal ein Helper an?!");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public static void hinzufuegen()
{
    try {
         DefaultListModel dlm = new DefaultListModel();
    for (BerryManager i : myBerry) {
        dlm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+  "kg, " + i.getColor());
    }
        ListBerry.setModel(dlm);
    } catch (Exception e) {
    }
   
}
    private void jButton4deleteHelper(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4deleteHelper
        jWarningBerry.setText("");
        if (ListBerry.getModel().getSize()==0) {
            jWarningBerry.setText("Bruder legt doch erstmal ein Helper an?!");
        }else
        {
        try {
                int selectedIndex = ListBerry.getSelectedIndex();
                DefaultListModel model = (DefaultListModel)ListBerry.getModel();
                if (selectedIndex != -1) {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Sicher das du löschen willst?","Warning",dialogButton);
                if (dialogResult == 0) {
                    model.remove(selectedIndex);
                    myBerry.remove(selectedIndex);
                }
                }else{
                    jWarningBerry.setText("Erst auswählen dann löschen!");
                }
            } catch (Exception e) {
                jWarningBerry.setText("ein Berry sollte schon vorhanden sein?!");
            }
        }
    }//GEN-LAST:event_jButton4deleteHelper

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);
        BasicData home = new BasicData();
        home.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void cbFiltershowFilter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltershowFilter
        String select = cbFilter.getSelectedItem().toString();
        try {
            DefaultListModel fdm = new DefaultListModel();
            for (BerryManager i : myBerry) {
                switch(select)
                {
                      
                    case "brown":
                    if (i.getColor()=="brown") {
                        fdm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+ ", " + i.getColor());
                    }
                    break;
                    case "green":
                    if (i.getColor()=="green") {
                        fdm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+ ", " + i.getColor());
                    }
                    break;
                    case "yellow":
                    if (i.getColor()=="yellow") {
                        fdm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+ ", " + i.getColor());
                    }
                    break;
                    case "red":
                    if (i.getColor()=="red") {
                        fdm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+ ", " + i.getColor());
                    }
                    break;
                    case "all":
                    fdm.addElement(i.getBerryID()+". " + i.getBerrytyp()+ ", " + i.getWeight()+ ", " + i.getColor());
                    break;
                }
            }
            ListBerry.setModel(fdm);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbFiltershowFilter

    private void updatenDoubleClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatenDoubleClick
     if(evt.getClickCount() == 2 && !evt.isConsumed())
     {
        jWarningBerry.setText("");
        if (ListBerry.getModel().getSize()==0) {
            jWarningBerry.setText("Bruder legt doch erstmal ein Helper an?!");
        }else
        {
            try {
                int selectedIndex = ListBerry.getSelectedIndex();
                if (selectedIndex != -1) {
                    this.setVisible(false);
                    UpdateBerry createwindow = new UpdateBerry();
                    createwindow.setVisible(true);
                    UpdateBerry.setBerry(selectedIndex);
                }else{
                    jWarningBerry.setText("Erst auswählen dann updaten!");
                }
            } catch (Exception e) {
                jWarningBerry.setText("Bruder legt doch erstmal ein Helper an?!");
            }
        }
     }
    }//GEN-LAST:event_updatenDoubleClick

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BerryManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JList<String> ListBerry;
    private javax.swing.JComboBox<String> cbFilter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jWarningBerry;
    // End of variables declaration//GEN-END:variables
}
